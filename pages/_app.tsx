import FooterLinks from "@/components/footer/FooterLinks";
import SimpleHeader from "@/components/header/SimpleHeader";
import SearchProvider from "@/components/search/SearchProvider";
import { ColorScheme, ColorSchemeProvider, Container, MantineProvider } from "@mantine/core";
import { useLocalStorage } from "@mantine/hooks";
import { AppProps } from "next/app";
import Head from "next/head";

const MyApp = (props: AppProps) => {
	const { Component, pageProps } = props;

	const [colorScheme, setColorScheme] = useLocalStorage<ColorScheme>({
		key: "color-scheme",
		defaultValue: "light",
		getInitialValueInEffect: true,
	});

	const toggleColorScheme = (value?: ColorScheme) => setColorScheme(value || (colorScheme === "dark" ? "light" : "dark"));

	return (
		<>
			<Head>
				<title>Page title</title>
				<meta name='viewport' content='minimum-scale=1, initial-scale=1, width=device-width' />
				<meta name='viewport' content='width=device-width, initial-scale=1, maximum-scale=1' />
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>

			<ColorSchemeProvider colorScheme={colorScheme} toggleColorScheme={toggleColorScheme}>
				<MantineProvider withGlobalStyles withNormalizeCSS theme={{ colorScheme }}>
					<SearchProvider>
						<SimpleHeader />
						<Container size='sm' mb='xl' style={{ overflowX: "hidden", paddingBottom: "10px" }}>
							<Component {...pageProps} />
						</Container>
						<FooterLinks />
					</SearchProvider>
				</MantineProvider>
			</ColorSchemeProvider>
		</>
	);
};

export default MyApp;
